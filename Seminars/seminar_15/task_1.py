# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–æ–¥—É–ª—å logging –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
# –æ–± –æ—à–∏–±–∫–µ –≤ —Ñ–∞–π–ª. üìå –ù–∞–ø—Ä–∏–º–µ—Ä –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å.

from logging import WARNING, basicConfig, getLogger
from typing import Any


def get_from_dict(dct: dict, key: Any):
    try:
        return dct[key]
    except KeyError as e:
        LOGGER.critical(f'Cannot get value from key: {key}, {e}')


if __name__ == '__main__':
    basicConfig(filename='log/log_1.log', level=WARNING, datefmt='%H:%M:%S',
                format='[{levelname:<8}] {asctime}: {msg}', style='{')
    LOGGER = getLogger(__name__)

    dct = {
        1: 'one',
        2: 'two',
        3: 'three'
    }

    get_from_dict(dct, 4)

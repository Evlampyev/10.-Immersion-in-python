# üìå–û–±—ä–µ–¥–∏–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö –∑–∞–¥–∞—á.
# üìå–§—É–Ω–∫—Ü–∏—é —É–≥–∞–¥–∞–π–∫—É –∑–∞–¥–µ–∫–æ—Ä–∏—Ä—É–π—Ç–µ:
# ‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤,
# ‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –∫–æ–Ω—Ç—Ä–æ–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –∏
# ‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞.
# üìå–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤.
from task_2 import ugadaika_decorator
from task_3 import decorator_save_to_json
from task_4 import count_calls


@count_calls(2)
@ugadaika_decorator
@decorator_save_to_json
def func_ugadaika(user_guess: int, user_num: int) -> str:
    """
    –£–≥–∞–¥—ã–≤–∞–µ–º —á–∏—Å–ª–æ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
    :param user_guess: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
    :param user_num: –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ
    :return: —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–≥–∞–¥—ã–≤–∞–Ω–∏—è
    """
    current_guess = 1
    while current_guess <= user_guess:
        ans = int(input(f"–ü–æ–ø—ã—Ç–∫–∞ ‚Ññ{current_guess}. –í–∞—à –≤–∞—Ä–∏–∞–Ω—Ç: "))
        if ans > user_num:
            print('–ú–µ–Ω—å—à–µ')
        elif ans < user_num:
            print("–ë–æ–ª—å—à–µ")
        else:
            return f"–í—ã —É–≥–∞–¥–∞–ª–∏ –Ω–∞ {current_guess} –ø–æ–ø—ã—Ç–∫–µ. "
        current_guess += 1
    else:
        return f'–í–∞—à–∏ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –û—Ç–≤–µ—Ç {user_num}.'


if __name__ == '__main__':
    play = func_ugadaika(12, 49)
    print(play)


# –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–µ–º–Ω–æ–∂–∫–æ –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã –¥–ª—è –±–æ–ª–µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞, —Ç–∞–º —Å return –ø—Ä–æ–±–ª–µ–º—ã
